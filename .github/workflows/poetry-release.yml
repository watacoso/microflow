name: Poetry Release

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install poetry
      run: |
        python -m pip install poetry
    - name: Configure poetry
      run: |
        poetry config virtualenvs.in-project true
    - name: Cache the virtualenv
      uses: actions/cache@v4
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      working-directory: miniduct
      run: |
        poetry install
    - name: Build package
      working-directory: miniduct
      run: |
        poetry build
    - name: Upload distributions
      uses: actions/upload-artifact@v4
      with:
        name: release-dists
        path: miniduct/dist/

  pypi-publish:
      runs-on: ubuntu-latest
      needs:
        - release-build
      permissions:
        # IMPORTANT: this permission is mandatory for trusted publishing
        id-token: write

      # Dedicated environments with protections for publishing are strongly recommended.
      # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
      environment:
        name: pypi
        # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
        # url: https://pypi.org/p/YOURPROJECT
        #
        # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
        # ALTERNATIVE: exactly, uncomment the following line instead:
        # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

      steps:
        - name: Retrieve release distributions
          uses: actions/download-artifact@v4
          with:
            name: release-dists
            path: miniduct/dist/

        - name: Publish release distributions to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            packages-dir: dist/
