name: Package Release

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install poetry
      run: |
        python -m pip install poetry
    - name: Configure poetry
      run: |
        poetry config virtualenvs.in-project true
    - name: Cache the virtualenv
      uses: actions/cache@v4
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      working-directory: miniduct
      run: |
        poetry install
    - name: Lint with ruff
      working-directory: miniduct
      run: |
        poetry run ruff check
    - name: Run tests
      working-directory: miniduct
      run: |
        poetry run pytest
    - name: Build package
      working-directory: miniduct
      run: |
        poetry build
    - name: Publish package
      working-directory: miniduct
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
        poetry publish --build --username __token__ --password ${{ secrets.PYPI_TOKEN }}
      env:
        POETRY_HTTP_BASIC_PYPI_USERNAME: __token__
        POETRY_HTTP_BASIC_PYPI_PASSWORD: ${{ secrets.PYPI_TOKEN }}
    - name: Clean up
      run: |
        rm -rf .venv
        rm -rf dist
        rm -rf .pytest_cache
        rm -rf .ruff_cache
        rm -rf .mypy_cache
